//실패: 손도 못대서 그냥 답본을 올립니다
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* solution(const char* polynomial) {
    int x_coefficient = 0;  // x 항의 계수
    int constant = 0;  // 상수항

    // 문자열을 공백 기준으로 분리
    char* str = strdup(polynomial);  // 원본 문자열을 변경하지 않기 위해 복사
    char* token = strtok(str, " ");
    
    while (token != NULL) {
        // x가 있는 항인지 확인
        if (strchr(token, 'x') != NULL) {
            if (strlen(token) == 1) {
                x_coefficient += 1;  // "x"만 있는 경우 계수 1 추가
            } else {
                x_coefficient += atoi(token);  // 계수를 더함
            }
        } else if (strcmp(token, "+") != 0) {
            constant += atoi(token);  // 상수항 더함
        }

        token = strtok(NULL, " ");
    }

    free(str);  // 메모리 해제

    // 결과 문자열 생성
    char* answer = (char*)malloc(50 * sizeof(char));
    if (x_coefficient == 0 && constant == 0) {
        strcpy(answer, "0");
    } else if (x_coefficient == 0) {
        sprintf(answer, "%d", constant);
    } else if (constant == 0) {
        if (x_coefficient == 1) {
            strcpy(answer, "x");
        } else {
            sprintf(answer, "%dx", x_coefficient);
        }
    } else {
        if (x_coefficient == 1) {
            sprintf(answer, "x + %d", constant);
        } else {
            sprintf(answer, "%dx + %d", x_coefficient, constant);
        }
    }

    return answer;
}

int main() {
    const char* polynomial = "3x + 7 + x";
    char* result = solution(polynomial);
    printf("%s\n", result);  // "4x + 7" 출력
    free(result);  // 결과 문자열 메모리 해제

    polynomial = "x + x + x";
    result = solution(polynomial);
    printf("%s\n", result);  // "3x" 출력
    free(result);  // 결과 문자열 메모리 해제

    return 0;
}
